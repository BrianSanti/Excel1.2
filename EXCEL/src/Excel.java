
import java.awt.Color;
import javax.swing.JColorChooser;
import java.awt.Font; 
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import say.swing.JFontChooser;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author BRIAN
 */
public class Excel extends javax.swing.JFrame {
    
    
    DefaultTableModel md;
    String data [][] = {};
    Font tipoletra;
    CellData[][] clipboard;
    
    public Excel() {
        md = new DefaultTableModel();
        initComponents();
        TableColumnModel tcm = jTableAZ.getColumnModel();
        tcm.getColumn(0).setResizable(false);
        tcm.getColumn(0).setPreferredWidth(25);
        jTableAZ.getTableHeader().setReorderingAllowed(false);
        
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAZ = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jblTipoletra = new javax.swing.JLabel();
        btnTipoLetra = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmuArchivo = new javax.swing.JMenu();
        jmiAbrir = new javax.swing.JMenuItem();
        jmiGuardar = new javax.swing.JMenuItem();
        jmiSalir = new javax.swing.JMenuItem();
        jmuNuevo = new javax.swing.JMenu();
        jmuOpciones = new javax.swing.JMenu();
        jmiCopiar = new javax.swing.JMenuItem();
        jmiPegar = new javax.swing.JMenuItem();
        jmiColorLetra = new javax.swing.JMenuItem();
        jmuTipoLetra = new javax.swing.JMenu();
        jmiCalibri = new javax.swing.JMenuItem();
        jmiArial = new javax.swing.JMenuItem();
        jmiMvBoli = new javax.swing.JMenuItem();
        jmiConsolas = new javax.swing.JMenuItem();
        jmiComic = new javax.swing.JMenuItem();
        jmiColorFondo = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        jTableAZ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"2", "", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"3", "", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"4", "", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"5", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"6", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"7", null, null, null, "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"8", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"9", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"10", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"11", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"12", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"13", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"14", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"15", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"16", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"17", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"18", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"19", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"20", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"21", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"22", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"23", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"24", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"25", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"26", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"27", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"28", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"29", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"30", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"31", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "Ã‘", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
            }
        ));
        jTableAZ.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableAZ.setDropMode(javax.swing.DropMode.ON_OR_INSERT);
        jScrollPane2.setViewportView(jTableAZ);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Fuente"));

        jblTipoletra.setText("Tipo De Letra");

        btnTipoLetra.setText("Tipo De Letra");
        btnTipoLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoLetraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jblTipoletra)
                    .addComponent(btnTipoLetra))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jblTipoletra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTipoLetra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));

        jmuArchivo.setBackground(new java.awt.Color(255, 255, 255));
        jmuArchivo.setText("ARCHIVO");

        jmiAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jmiAbrir.setText("ABRIR");
        jmiAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAbrirActionPerformed(evt);
            }
        });
        jmuArchivo.add(jmiAbrir);

        jmiGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jmiGuardar.setText("GUARDAR");
        jmiGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGuardarActionPerformed(evt);
            }
        });
        jmuArchivo.add(jmiGuardar);

        jmiSalir.setText("SALIR");
        jmiSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalirActionPerformed(evt);
            }
        });
        jmuArchivo.add(jmiSalir);

        jMenuBar1.add(jmuArchivo);

        jmuNuevo.setBackground(new java.awt.Color(255, 255, 255));
        jmuNuevo.setText("NUEVO ");
        jmuNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmuNuevoMousePressed(evt);
            }
        });
        jMenuBar1.add(jmuNuevo);

        jmuOpciones.setBackground(new java.awt.Color(255, 255, 255));
        jmuOpciones.setText("OPCIONES");

        jmiCopiar.setText("COPIAR");
        jmiCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCopiarActionPerformed(evt);
            }
        });
        jmuOpciones.add(jmiCopiar);

        jmiPegar.setText("PEGAR");
        jmiPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPegarActionPerformed(evt);
            }
        });
        jmuOpciones.add(jmiPegar);

        jmiColorLetra.setText("COLOR DE LETRA");
        jmiColorLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiColorLetraActionPerformed(evt);
            }
        });
        jmuOpciones.add(jmiColorLetra);

        jmuTipoLetra.setText("TIPO DE LETRA");

        jmiCalibri.setText("CALIBRI");
        jmiCalibri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmiCalibriMousePressed(evt);
            }
        });
        jmiCalibri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCalibriActionPerformed(evt);
            }
        });
        jmuTipoLetra.add(jmiCalibri);

        jmiArial.setText("ARIAL");
        jmiArial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmiArialMousePressed(evt);
            }
        });
        jmuTipoLetra.add(jmiArial);

        jmiMvBoli.setText("MV BOLI");
        jmiMvBoli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmiMvBoliMousePressed(evt);
            }
        });
        jmuTipoLetra.add(jmiMvBoli);

        jmiConsolas.setText("CONSOLAS");
        jmiConsolas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmiConsolasMousePressed(evt);
            }
        });
        jmuTipoLetra.add(jmiConsolas);

        jmiComic.setText("COMIC SANS MS");
        jmiComic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jmiComicMousePressed(evt);
            }
        });
        jmuTipoLetra.add(jmiComic);

        jmuOpciones.add(jmuTipoLetra);

        jmiColorFondo.setText("COLOR FONDO");
        jmiColorFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiColorFondoActionPerformed(evt);
            }
        });
        jmuOpciones.add(jmiColorFondo);

        jMenuBar1.add(jmuOpciones);

        jMenu4.setBackground(new java.awt.Color(255, 255, 255));
        jMenu4.setText("AYUDA");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu4MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1257, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGuardarActionPerformed
        // boton guardar 
        
        JFileChooser fc = new JFileChooser();
        fc.showSaveDialog(this);
        String guardar = fc.getSelectedFile().getAbsolutePath();
        
        File file = new File(guardar);
        saveTable(file);
             
    }//GEN-LAST:event_jmiGuardarActionPerformed

    private void jMenu4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MousePressed
       
       Ayuda abrir = new Ayuda();
        abrir.setVisible(rootPaneCheckingEnabled);
          this.setVisible(false);      
        
    }//GEN-LAST:event_jMenu4MousePressed

    private void jmiColorLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiColorLetraActionPerformed
          Color c = JColorChooser.showDialog(rootPane,"COLOR", this.getForeground()); 
          jTableAZ.setForeground(c);
          
    }//GEN-LAST:event_jmiColorLetraActionPerformed

    private void jmuNuevoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmuNuevoMousePressed
        
        String Columna="";
        Object[][] filas = new Object [31][27];
        for(int intconteo = 0;intconteo<=30;intconteo++){
            Columna = Integer.toString(intconteo);  
            filas[intconteo][0]=Columna;
            for(int intcolum = 1;intcolum<=26;intcolum++){
                filas[intconteo][intcolum]= null;
            }        
        }
      
        jTableAZ.setModel(new javax.swing.table.DefaultTableModel(filas,
            new String [] {
                "","A", "B", "C", "D", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
            }
        ));
     
        
        
    }//GEN-LAST:event_jmuNuevoMousePressed

    private void jmiSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jmiSalirActionPerformed

    private void jmiCalibriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCalibriActionPerformed

    }//GEN-LAST:event_jmiCalibriActionPerformed

    private void jmiCalibriMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiCalibriMousePressed
        Font fuente = new Font("Calibri", 10,20);
        jTableAZ.setFont(fuente); 
    }//GEN-LAST:event_jmiCalibriMousePressed

    private void jmiArialMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiArialMousePressed
        Font fuente = new Font("Arial", 10, 20);
        jTableAZ.setFont(fuente); 
    }//GEN-LAST:event_jmiArialMousePressed

    private void jmiMvBoliMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiMvBoliMousePressed
          Font fuente = new Font("MV Boli", 10, 20);
        jTableAZ.setFont(fuente); 
    }//GEN-LAST:event_jmiMvBoliMousePressed

    private void jmiConsolasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiConsolasMousePressed
           Font fuente = new Font("Consolas", 10, 20);
        jTableAZ.setFont(fuente); 
    }//GEN-LAST:event_jmiConsolasMousePressed

    private void jmiComicMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmiComicMousePressed
           Font fuente = new Font("Comic Sans MS", 10, 20);
        jTableAZ.setFont(fuente); 
    }//GEN-LAST:event_jmiComicMousePressed

    private void jmiAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAbrirActionPerformed
        // boton para cargar o abrir
           final JFileChooser fc = new JFileChooser();
           fc.showOpenDialog(this);
           String path = fc.getSelectedFile().getAbsolutePath();          
           File f = new File(path);

            if (f.isFile()){
                loadTable(f);
            }   
    }//GEN-LAST:event_jmiAbrirActionPerformed

    private void btnTipoLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoLetraActionPerformed
       JFontChooser tipodelaletraseleccion = new JFontChooser();
       int inttp = tipodelaletraseleccion.showDialog(this);
       if(inttp == JFontChooser.OK_OPTION){
           tipoletra = tipodelaletraseleccion.getSelectedFont();
           jTableAZ.setFont(tipoletra);
       }
    }//GEN-LAST:event_btnTipoLetraActionPerformed

    private void jmiPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPegarActionPerformed
        
    }//GEN-LAST:event_jmiPegarActionPerformed

    private void jmiCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCopiarActionPerformed
        // TODO add your handling code here:
        int[] a = jTableAZ.getSelectedColumns(), b = jTableAZ.getSelectedRows();
            Excel.this.clipboard = new CellData[b.length][a.length];
            
            for (int i = 0; i <= a.length - 1; i++) {
              for (int j = 0; j <= b.length - 1; j++) {
                CellData temp;
                  temp = (CellData) jTableAZ.getValueAt(b[j], a[i]);
                  JOptionPane.showInputDialog("sdasd "+temp);
                try {
                  Excel.this.clipboard[j][i] = (CellData)temp.clone();
                  
                } catch (CloneNotSupportedException ex) {}
               
              }
              } 
    }//GEN-LAST:event_jmiCopiarActionPerformed

    private void jmiColorFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiColorFondoActionPerformed
        // TODO add your handling code here:
        //FOndo
        JColorChooser jcc = new JColorChooser();
        Color c = jcc.showDialog(null, "Please select a color",Color.RED);
        jTableAZ.setBackground(c);
        
    }//GEN-LAST:event_jmiColorFondoActionPerformed
 
//AQUI VAN TODOS LAS FUNCIONES Y METODOS
    //RESTAURAR
    public void restaurar(){
        
    }   
    
    private void saveTable(File file){   
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            
            for(int i = 0; i < jTableAZ.getRowCount(); i++){//rows
                for(int j = 0; j < jTableAZ.getColumnCount(); j++){//columns
                    Object value = jTableAZ.getValueAt(i,j);
                    if(value!=null){
                        bw.write(jTableAZ.getValueAt(i, j).toString()+",");
                    }else{
                        bw.write(" ,");
                    }
                    
                }
                bw.newLine();
            }
            
            bw.close();
            fw.close();
            
        } catch (IOException ex) {
            Logger.getLogger(Excel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private DefaultTableModel getTableModel(JTable table){
        DefaultTableModel model = (DefaultTableModel) table.getModel();        
        return model;
    }
    
    private void loadTable(File file) {        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel model = (DefaultTableModel)jTableAZ.getModel();
            model.setRowCount(0);
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++){
                String[] row = lines[i].toString().split(",");
                model.addRow(row);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Excel.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Excel().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTipoLetra;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAZ;
    private javax.swing.JLabel jblTipoletra;
    private javax.swing.JMenuItem jmiAbrir;
    private javax.swing.JMenuItem jmiArial;
    private javax.swing.JMenuItem jmiCalibri;
    private javax.swing.JMenuItem jmiColorFondo;
    private javax.swing.JMenuItem jmiColorLetra;
    private javax.swing.JMenuItem jmiComic;
    private javax.swing.JMenuItem jmiConsolas;
    private javax.swing.JMenuItem jmiCopiar;
    private javax.swing.JMenuItem jmiGuardar;
    private javax.swing.JMenuItem jmiMvBoli;
    private javax.swing.JMenuItem jmiPegar;
    private javax.swing.JMenuItem jmiSalir;
    private javax.swing.JMenu jmuArchivo;
    private javax.swing.JMenu jmuNuevo;
    private javax.swing.JMenu jmuOpciones;
    private javax.swing.JMenu jmuTipoLetra;
    // End of variables declaration//GEN-END:variables

    

  
}
